name: ▶️ Run script

on:
  workflow_dispatch:
    inputs:
      script:
        description: 'Script to run (choose from scripts/ directory)'
        required: true
        default: 'renameCollections'
    
      environment:
        description: 'Select the deployment environment'
        type: choice
        required: true
        default: 'test'
        options:
          - test
          - acc
          - prev
          - prod

      prefix:
        description: 'Prefix to append for renaming collections'
        required: true
        default: 'archived_'          

jobs:
  run-script:
    name: Rename Collections
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # The env block in a step defines environment variables for that specific step.
      # The echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV approach is useful for setting
      # environment variables globally across multiple steps. However, in this case, MONGO_URI is only
      # used in the Run Script step, so there's no need for this extra setup step.
      # - name: Set up MongoDB Environment Variables
      #   run: |
      #     echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV
      #   env:
      #     environment: ${{ github.event.inputs.environment }}

      - name: Install Dependencies
        run: npm install

      - name: Compile TypeScript
        run: npm run build:all

      - name: List Build Directory #TEST TO CHECK IF COMPILATION WORKED
        run: ls -R .build

      - name: Resolve and Validate Script
        id: validate-script
        run: |
          SCRIPT_NAME="${{ github.event.inputs.script }}"
          BASE_PATH="./.build/scripts"
          
          # Ensure .js extension is present
          if [[ "$SCRIPT_NAME" != *.js ]]; then
            SCRIPT_NAME="$SCRIPT_NAME.js"
          fi
          
          SCRIPT_PATH="$BASE_PATH/$SCRIPT_NAME"

          # Validate that the resolved script exists
          if [[ ! -f "$SCRIPT_PATH" ]]; then
            echo "Error: Script '$SCRIPT_PATH' does not exist."
            exit 1
          fi

          # Save the resolved script path for later steps
          echo "script_path=$SCRIPT_PATH" >> $GITHUB_ENV
     
      # - name: Run Collection Rename Script
      #   env:
      #     MONGO_URI: ${{ secrets.MONGO_URI }}
      #   run: |
      #     node ./.build/scripts/renameCollections.js "${{ github.event.inputs.prefix }}"

      - name: Run Script
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: node ${{ env.script_path }}
        #run: node ./.build/scripts/"${{ github.event.inputs.script }}".js "${{ github.event.inputs.prefix }}"
        # run: bash ${{ github.event.inputs.script }} params.json
