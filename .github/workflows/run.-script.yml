name: ▶️ Run script

on:
  workflow_dispatch:
    inputs:
      script:
        description: 'Script to run (choose from scripts/ directory)'
        required: true
        default: 'saySomething'
    
      environment:
        description: 'Select the deployment environment'
        type: choice
        required: true
        default: 'test'
        options:
          - test
          - acc
          - prev
          - prod

      # prefix:
      #   description: 'Prefix to append for renaming collections'
      #   required: true
      #   default: 'archived_'          

jobs:
  run-script:
    name: Run script
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # The env block in a step defines environment variables for that specific step.
      # The echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV approach is useful for setting
      # environment variables globally across multiple steps. However, in this case, MONGO_URI is only
      # used in the Run Script step, so there's no need for this extra setup step.
      # - name: Set up MongoDB Environment Variables
      #   run: |
      #     echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV
      #   env:
      #     environment: ${{ github.event.inputs.environment }}

      - name: Install Dependencies
        run: npm install

      - name: Compile TypeScript
        run: npm run build:all

      # TEST TO CHECK IF COMPILATION WORKED
      - name: List Build Directory
        run: ls -R .build

      - name: Resolve and Validate Script
        id: validate-script
        run: |
          SCRIPT_NAME="${{ github.event.inputs.script }}"
          BASE_PATH="./.build/scripts"
          
          # Ensure .js extension is present
          if [[ "$SCRIPT_NAME" != *.js ]]; then
            SCRIPT_NAME="$SCRIPT_NAME.js"
          fi
          
          SCRIPT_PATH="$BASE_PATH/$SCRIPT_NAME"

          # Validate that the resolved script exists
          if [[ ! -f "$SCRIPT_PATH" ]]; then
            echo "Error: Script '$SCRIPT_PATH' does not exist."
            exit 1
          fi

          # NOW FOR SOME VALIDATION THAT THE ts file has a run function and that it returns a String
          TS_SCRIPT_NAME="${SCRIPT_NAME%.js}.ts"          
          TS_BASE_PATH="./src/scripts"
          TS_SCRIPT_PATH="$TS_BASE_PATH/$TS_SCRIPT_NAME"

          if [[ ! -f "$TS_SCRIPT_PATH" ]]; then
            echo "Error: TypeScript script '$TS_SCRIPT_PATH' does not exist."
            exit 1
          fi


          # Save the resolved script path for later steps
          echo "script_path=$SCRIPT_PATH" >> $GITHUB_ENV




      # - name: Validate script before execution
      #   run: |
      #     node ./.build/utils/validate-script.js $TS_SCRIPT_PATH
      # Step 1: Validate if the script has a 'run' function
      - name: Validate script for 'run' function
        id: validate_script
        run: |
          # Path to the script
          # script_path="./scripts/${{ github.event.inputs.script_name }}.ts"
          script_path="$TS_SCRIPT_PATH"
           
          # Check if the script contains 'export function run' or 'export const run'
          if ! grep -q "export.*run(" "$script_path"; then
            echo "Error: Script must export a 'run' function" >&2
            exit 1  # Exit if validation fails
          else
            echo "Validation passed: 'run' function found in script."
          fi
          


     
      - name: Run Script
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: node ${{ env.script_path }}
