name: ▶️ Run script

on:
  workflow_dispatch:
    inputs:
      script:
        description: 'Script to run (choose from src/scripts/)'
        required: true
        default: 'example-script'

      environment:
        description: 'Select the deployment environment'
        type: choice
        required: true
        default: 'dev'
        options:
          - dev
          - acc
          - prev
          - prod

jobs:
  run-script:
    name: Run script
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Transpile TypeScript
        run: npm run build:all

#      # TEST TO CHECK IF COMPILATION WORKED
#      - name: List Build Directory
#        run: ls -R .build

      - name: Validate script
        id: validate-script
        run: |
          SCRIPT_NAME="${{ github.event.inputs.script }}"
          BASE_PATH="./.build/scripts"
          
          # Ensure .js extension is present
          if [[ "$SCRIPT_NAME" != *.js ]]; then
            SCRIPT_NAME="$SCRIPT_NAME.js"
          fi
          
          SCRIPT_PATH="$BASE_PATH/$SCRIPT_NAME"

          # Validate that the script exists
          if [[ ! -f "$SCRIPT_PATH" ]]; then
            echo "Error: Script '$SCRIPT_PATH' does not exist."
            exit 1
          fi


          # NOW FOR SOME VALIDATION THAT THE TS FILE
          # 1 - has a 'run' function
          # 2 - that 'run' returns a 'ScriptRunResult' type
          # 3 - that 'run' is executed
          TS_SCRIPT_NAME="${SCRIPT_NAME%.js}.ts"
          TS_BASE_PATH="./src/scripts"
          TS_SCRIPT_PATH="$TS_BASE_PATH/$TS_SCRIPT_NAME"
          if [[ ! -f "$TS_SCRIPT_PATH" ]]; then
            echo "Error: TypeScript script '$TS_SCRIPT_PATH' does not exist."
            exit 1
          fi
          # Check if the script contains 'export function run' or 'export const run'
          # Use grep to check for arrow functions, regular functions, and default exports
          if ! grep -qE "export\s+(const\s+run\s*=|function\s+run\s*\()" "$TS_SCRIPT_PATH" && ! grep -q "export\s+default\s+run\s*\(" "$SCRIPT_PATH"; then
            echo "Error: The script must export a 'run' function."
            exit 1
          fi
          # Validate return type of run function
          # Use grep to ensure the script's run function returns a ScriptRunResult
          if ! grep -qE "export\s+(const\s+run\s*=|function\s+run\s*\()[^\)]*\)\s*:\s*(ScriptRunResult)" "$TS_SCRIPT_PATH" && ! grep -qE "export\s+default\s+run\s*\([^\)]*\)\s*:\s*(ScriptRunResult)" "$SCRIPT_PATH"; then
            echo "Error: The 'run' function must return a type of 'ScriptRunResult'."
            exit 1
          fi
          # Check if the run function is executed
          if ! grep -qE "\brun\s*\(" "$TS_SCRIPT_PATH"; then
          echo "Error: The 'run' function must be executed (called) in the script."
          exit 1
          fi


          # Save for later steps
          echo "script_name=$SCRIPT_NAME" >> $GITHUB_ENV
          echo "script_path=$SCRIPT_PATH" >> $GITHUB_ENV


      - name: Run script
        id: run-script
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
        # run: node ${{ env.script_path }}
        # make script output available to next step:
        run: |
          output=$(node ${{ env.script_path }})
          echo "script_output=$output" >> $GITHUB_ENV

      - name: Write to Wiki
        #run: |
        #  echo "The script output was: ${{ env.script_output }}"
        run: node ./.build/helpers/log-to-wiki.js
        env:
          SCRIPT_NAME: ${{env.script_name}}
          RUN_ENV: ${{ github.event.inputs.environment }}
          RUN_INITIATOR: ${{ github.triggering_actor }}
          SCRIPT_OUTPUT: ${{env.script_output}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # Default GitHub token provided by Actions
          GITHUB_REPOSITORY: ${{ github.repository }} # Pass the repository info to the script
